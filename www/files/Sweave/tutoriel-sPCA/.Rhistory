  if(nrow(xy) != nrow(obj@tab)) stop("obj@tab and xy must have the same row numbers.")

  ## prepare data
  f1 <- function(vec){
    m <- mean(vec,na.rm=TRUE)
    vec[is.na(vec)] <- m
    return(vec)
  }

  if(is.genind(obj)) { X <- obj@tab }
  if(is.genpop(obj)) { X <- makefreq(obj, quiet=TRUE)$tab }

  ## handle NAs
  if(any(is.na(X))){
      warning("NAs in data are automatically replaced (to mean allele frequency")
      X <- apply(X,2,f1)
  }

  if(truenames){
      temp <- truenames(obj) # ! can return a list or a matrix
      if(is.list(temp)) {temp <- temp$tab}
      rownames(X) <- rownames(temp)
      colnames(X) <- colnames(temp)
  }

  # perform analyses
  pcaX <- dudi.pca(X, center=TRUE, scale=scale, scannf=FALSE)

  spcaX <- multispati(dudi=pcaX, listw=resCN, scannf=scannf, nfposi=nfposi, nfnega=nfnega)

  nfposi <- spcaX$nfposi
  nfnega <- spcaX$nfnega

  spcaX$xy <- xy
  rownames(spcaX$xy) <- rownames(spcaX$li)
  colnames(spcaX$xy) <- c("x","y")
  
  spcaX$lw <- resCN
  
  spcaX$call <- appel

  posaxes <- if(nfposi>0) {1:nfposi} else NULL
  negaxes <- if(nfnega>0) {(length(spcaX$eig)-nfnega+1):length(spcaX$eig)} else NULL
  keptaxes <- c(posaxes,negaxes)

  ## set names of different components
  colnames(spcaX$c1) <- paste("Axis",keptaxes)
  colnames(spcaX$li) <- paste("Axis",keptaxes)
  colnames(spcaX$ls) <- paste("Axis",keptaxes)
  row.names(spcaX$c1) <- colnames(X)
  colnames(spcaX$as) <- colnames(spcaX$c1)
  temp <- row.names(spcaX$as)
  row.names(spcaX$as) <- paste("PCA",temp)
  
  class(spcaX) <- "spca"

  return(spcaX)

} # end spca



mySpca <- eval(mySpca$call)
warnings()
mySpca$as
rm(spca)
q()
y
q()
y
screeplot(myspca)
screeplot(mySpca)
global.rtest
global.rtest(mySpca$tab)
global.rtest(mySpca$tab,mySpca$cn)
global.rtest(mySpca$tab,mySpca$lw,nperm=99)
mySpca$tab
mySpca$call
obj
global.rtest(obj@tab,mySpca$lw,nperm=99)
global.rtest(obj$tab,mySpca$lw,nperm=99)
plot(global.rtest(obj$tab,mySpca$lw,nperm=99))
plot(global.rtest(obj$tab,mySpca$lw,nperm=399))
plot(global.rtest(obj$tab,mySpca$lw,nperm=99))
myGtest <- global.rtest(obj$tab,mySpca$lw,nperm=99)
plot(myGtest)
?randtest
?plot.spca
plot(mySpca)
s.contour
s.image
?s.value
?colorplot
colorplot(mySpca)
colorplot(mySpca,cex=3)
colorplot(mySpca,cex=3,main="colorplot of mySpca, first global scores")

example(colorplot)
myLoadings <- mySpca$c1[,1]^2
names(myLoadings) <- rownames(mySpca$c1)
loadingplot(myLoadings, xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA")

myLoadings <- mySpca$c1[,1]^2
names(myLoadings) <- rownames(mySpca$c1)
loadingplot(myLoadings, xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA",fac=obj$loc.fac)
myLoadings <- mySpca$c1[,1]^2
names(myLoadings) <- rownames(mySpca$c1)
loadingplot(myLoadings, xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA",fac=obj$loc.fac,cex.fac=.8)
args(loadingplot)
contribAlleles <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.9), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA", fac=obj@loc.fac, cex.lab=0.8)

temp <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.9), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA", fac=obj@loc.fac, cex.lab=0.8)
temp
temp <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.9), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA", fac=obj@loc.fac, cex.fac=0.8)
temp <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.9), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA", fac=obj@loc.fac, cex.fac=0.8)
temp <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.95), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA", fac=obj@loc.fac, cex.fac=0.8)
temp

temp <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.95), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first axis sPCA", fac=obj@loc.fac, cex.fac=0.6)
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.2")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.2")
boxplot(myLoadings,fac=obj$loc.fac)
boxplot(myLoadings~obj$loc.fac)
boxplot(myLoadings~obj$loc.fac,las=3)
boxplot(myLoadings~obj$loc.fac, las=3, main="Contributions by markers \nto the first global score")

Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.2")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.2")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.2")
q()
y
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.2")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
?loadingplot
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
citation("adegenet")
citation()
ls()
Sweave("/home/master/these/adegenet/tutoriel-sPCA/tutorial-spca.1.3")
q()
y
