% On lui donne l'en-tete
\input{enTeteTJ}

\setboolean{tutorial}{true}
\newcommand{\titrefiche}{A tutorial for the spatial Principal
  Component Analysis using the R package \emph{adegenet\_1.2-2 }}
\newcommand{\shorttitle}{\emph{adegenet} tutorial}
\newcommand{\sommairefiche}{ }
\newcommand{\auteurfiche}{T. JOMBART}
\newcommand{\rcmd}[1]{\textcolor{red}{\texttt{#1}}}

%infos générales du document
\title{\titrefiche}
\author{\auteurfiche}
\date{October 2008 - adegenet\_1.2-2}


% debut du document proprement dit
\begin{document}
\input{styleTJ}
\selectlanguage{english}

%% Les options par défaut de Sweave, ici on lui dit de mettre les figures dans le 
%% dossier "figs" avec le préfixe, histoire de ne pas avoir trop de 
%% fichiers dans le dossier de travail. On lui dit aussi qu'il y a une figure par défaut, 
%% qu'on ne veut les figures en EPS, et on lui donne la taille par défaut des figures 
%% (en pouces) pour R, mais PAS pour le document final.

\SweaveOpts{prefix.string = figs/figure, fig = FALSE, eps = FALSE, pdf = TRUE, png = FALSE, width = 6, height = 6, size=.6}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% DEBUT DU DOCUMENT 

\maketitle
% Pour éviter les problèmes de couleur...
\color{black}
\noindent
{\small 
This tutorial still is in its beta form: it may (and will surely) need completion and improvements.
You can contribute to its improvement it by posting questions on
the \textit{adegenet} forum:
\url{adegenet-forum@lists.r-forge.r-project.org}, or by sending
comments to me at \url{jombart@biomserv.univ-lyon1.fr}.
}
\newpage
\tableofcontents
\newpage
\color{black}

\newpage

%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Introduction}
%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%
This tutorial goes through the \emph{spatial Principal Component
  Analysis} \citep[sPCA,][]{tjart04}, a multivariate method devoted to
the multivariate analysis of genetic markers.
The sPCA is implemented inside the \emph{adegenet} package
\citep{tjart05} for the R software \citep{tj400,np145}.
Parts of this implementation relies on functions from the \emph{ade4}
package \citep{tj311,tj521}.
Reading of the original paper describing the sPCA is assumed.
The purpose of this tutorial is to provide guidelines for practical
issues performing a sPCA and for interpreting the results.
After recalling basics of the sPCA, we detail the different tools in \emph{adegenet}
that are related to the method.
We conclude by going through the analysis of an empirical dataset.





%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{The sPCA in \emph{adegenet}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Some basics about sPCA}
%%%%%%%%%%%%%%%%%%%%%%%%%%%
Mathematical notations used in this tutorial are those from \citet{tjart04}.
The sPCA analyses a data matrix $\m{X}$ which contains genotypes or
populations (later refered to as 'entities') in rows and alleles in columns.
Spatial information is stored inside a spatial weighting matrix
$\m{L}$ which contains positive terms corresponding to some measurement
(often binary) of spatial proximity among entities.
Most often, these terms can be derived from a connection network built
upon a given algorithm \citep[for instance, ][pp.572-576]{tj88}.
This matrix is row-standardized (\textit{i.e.}, each of its rows sums
to one), and all its diagonal terms are zero.
$\m{L}$ can be used to compute the spatial autocorrelation of a
given centred variable $\m{x}$ (\textit{i.e.}, with mean zero) with $n$ observations ($\m{x} \in
\R^n$) using Moran's $I$ \citep{tj223,tj222,tj436}:
\beq
I(\m{x}) = \frac{\m{x}^T\m{Lx}}{\m{x}^T\m{x}}
\label{eqn:I}
\eeq

In the case of genetic data, $\m{x}$ contains frequencies of an allele.
Moran's $I$ can be used to measure spatial structure among the values
of $\m{x}$: it is highly positive when values of $\m{x}$ observed at
neighbouring sites tend to be similar (positive spatial
autocorrelation, referred to as \emph{global structures}), while it is
strongly negative when values of $\m{x}$ observed at
neighbouring sites tend to be dissimilar (negative spatial
autocorrelation, referred to as \emph{local structures}).

However, Moran's index measures only spatial structures, and does not take
the variability of $\m{x}$ into account.
The sPCA defines the following function to measure both spatial
structure and variability in $\m{x}$:
\beq
C(\m{x}) = \mbox{var}(\m{x})I(\m{x}) = \frac{1}{n}\m{x}^T\m{Lx}
\label{eqn:C}
\eeq

$C(\m{x})$ is highly positive when $\m{x}$ has a large variance and
exhibits a global structure; conversely, it is largely negative
when $\m{x}$ has a high variance and displays a local structure.
This function is the criterion used in sPCA, which finds linear
combinations of the alleles of $\m{X}$ (denoted $\psi=\m{Xv}$) decomposing $C$ from its
maximum to its minimum value.
Because $C(\m{Xv})$ is a product of variance and of autocorrelation,
it is important, when interpreting the results, to detail both
components and to compare their value with their range of variation
(maximum attainable variance, as well as maximum and minimum $I$ are
known analytically).
A structure with a low spatial autocorrelation can barely be
interpreted as a spatial pattern; similarly, a structure with a low
variance would likely not reflect any genetic structure.
We will later see how these information can be retrieved in \emph{adegenet}.





%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{The \texttt{spca} function}
%%%%%%%%%%%%%%%%%%%%%%%%%%%
The simulated dataset used to illustrate this section has been
analyzed in \citet{tjart04}, and corresponds to the Figure 2A of the article.
In \emph{adegenet}, the matrix of alleles frequencies previously
denoted $\m{X}$ exactly corresponds to the \texttt{@tab} slot of \texttt{genind} or
\texttt{genpop} objects:
<<>>=
data(spcaIllus)
obj <- spcaIllus$dat2A
obj
head(truenames(obj[loc="L01"])$tab)
@
\noindent The object \texttt{obj} is a \texttt{genind} object; note
that here, we only displayed the table for the first locus (\texttt{loc="L01"}).

The function performing the sPCA is \rcmd{spca}; it accepts a bunch
of arguments, but only the first two are mandatory to perform the
analysis (see \texttt{?spca} for further information):
<<>>=
args(spca)
@
The argument \texttt{obj} is a \texttt{genind}/\texttt{genpop} object.
By definition in sPCA, the studied entities are georeferenced.
The spatial information can be provided to the function \texttt{spca}
in several ways, the first being through the \texttt{xy} argument,
which is a matrix of spatial coordinates with
'x' and 'y' coordinates in columns.
Alternatively, these coordinates can be stored inside the
\texttt{genind}/\texttt{genpop} object, preferably as
\texttt{@other\$xy}, in which case the \texttt{spca} function will not
require a \texttt{xy} argument.
Basically, spatial information could be stored in any form and with
any name in the \texttt{@other} slot, but the \texttt{spca} function
would not recognize it directly.
Note that \texttt{obj} already contains spatial coordinates at the
appropriate place.
Hence, the following uses are valid (\texttt{ask} and \texttt{scannf}
are set to FALSE to avoid interactivity):
<<>>=
mySpca <- spca(obj,ask=FALSE,scannf=FALSE)
mySpca2 <- spca(obj,xy=obj@other$xy,ask=FALSE,scannf=FALSE)
all.equal(mySpca, mySpca2)
names(mySpca)[8]
@
\noindent Both objects are the same: they only differ by their call.
\\


Note, however, that spatial coordinates are not directly used in sPCA:
the spatial information is included in the analysis by the spatial
weighting matrix $\m{L}$ derived from a connection network (eq. \ref{eqn:I} and \ref{eqn:C}).
Technically, the \texttt{spca} function does not directly use a
matrix of spatial weightings, but a connection network with the class
\texttt{nb} or a list of spatial weights of class \texttt{listw},
which are both implemented by Roger Bivand's package \texttt{spdep}.
The function \texttt{chooseCN} is a wrapper for different functions
spread in several packages implementing a variety of connection networks.
If only spatial coordinates are provided to \texttt{spca},
\texttt{chooseCN} is called to construct an appropriate graph.
See \texttt{?chooseCN} for more information.
Note that many of the \texttt{spca} arguments are in fact arguments
for \texttt{chooseCN}: \texttt{type}, \texttt{ask}, \texttt{plot.nb},
\texttt{edit.nb}, \texttt{d1}, \texttt{d2}, \texttt{k}, \texttt{a}, and \texttt{dmin}.
For instance, the command:
<<>>=
mySpca <- spca(obj,type=1,ask=FALSE,scannf=FALSE)
@
\noindent performs a sPCA using the Delaunay triangulation as
connection network (\texttt{type=1}, see \texttt{?chooseCN}), while
the command:
<<>>=
mySpca <- spca(obj,type=5,d1=0,d2=2,scannf=FALSE)
@
\noindent computes a sPCA using a connection network which defines
neighbouring entities from their distances (\texttt{type=5}),
considering as neighbours two entities whose distance between 0
(\texttt{d1=0}) and 2 (\texttt{d2=2}).

Another possibility is of course to provide directly a connection
network (\texttt{nb} object) or a list of spatial weights
(\texttt{listw} object) to the \texttt{spca} function; this can be done via the \texttt{cn} argument.
For instance:
<<>>=
myCn <- chooseCN(obj$other$xy, type=6, k=10, plot=FALSE)
myCn
class(myCn)
mySpca2 <- spca(obj,cn=myCn,scannf=FALSE)
@
\noindent produces a sPCA using \texttt{myCn} ($k=10$ nearest
neighbours) as a connection network.
\\

After providing a genetic dataset along with a spatial information,
the \texttt{spca} function displays a barplot of eigenvalues and asks
for a number of positive axes ('first number of axes') and negative
axes ('second number of axes') to be retained (unless \texttt{scannf} is set to \texttt{FALSE}).
For the object \texttt{mySpca}, this barplot would be (here we
indicate in red the retained eigenvalue):
<<fig=TRUE,pdf=TRUE,size=.5>>=
barplot(mySpca$eig,main="Eigenvalues of sPCA", col=rep(c("red","grey"),c(1,100)))
@
\noindent Positive eigenvalues (on the left) correspond to global
structures, while negative eigenvalues (on the right) indicate local patterns.
Actual structures should result in more extreme (positive or
negative) eigenvalues; for instance, the object \texttt{mySpca} likely
contains one single global structure, and no local structure.
If one does not want to choose the number of retained axes
interactively, the arguments \texttt{nfposi} (number of retained
factors with positive eigenvalues) and \texttt{nfnega} (number of
retained factors with negative eigenvalues) can be used.
Once these information have been provided to \texttt{spca}, the
analysis is computed and stored inside an object with the class \texttt{spca}.





%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{A \texttt{spca} object}
%%%%%%%%%%%%%%%%%%%%%%%%%%%
Let us consider a \texttt{spca} object resulting from the analysis of
the object \texttt{obj}, using a Delaunay triangulation as connection network:
<<>>=
mySpca <- spca(obj,type=1,scannf=FALSE,plot.nb=FALSE,nfposi=1,nfnega=0)
class(mySpca)
mySpca
@

\noindent An \texttt{spca} object is a list containing all required
information about a performed sPCA.
Details about the different components of such a list can be found in
the \texttt{spca} documentation (\texttt{?spca}).
The purpose of this section is to show how the elements described
in \citet{tjart04} are stored inside a \texttt{spca} object.

First, eigenvalues of the analysis are stored inside the
\texttt{\$eig} component as a numeric vector stored in decreasing order:
<<fig=TRUE,pdf=TRUE,png=FALSE>>=
head(mySpca$eig)
tail(mySpca$eig)
length(mySpca$eig)
plot(mySpca$eig, type="h", lwd=2, main="A variant of the plot\n of sPCA eigenvalues")
abline(h=0,col="grey")
@

\noindent The axes of the analysis, denoted $\m{v}$ in \citet[][eq.(4)]{tjart04} are stored as columns inside the \texttt{\$c1} component.
Each columns contains loadings for all the alleles:
<<>>=
head(mySpca$c1)
tail(mySpca$c1)
dim(mySpca$c1)
@


\noindent The entity scores ($\psi = \m{Xv}$), are stored
in columns in the \texttt{\$li} component:
<<>>=
head(mySpca$li)
tail(mySpca$li)
dim(mySpca$li)
@

\noindent The lag vectors of the scores can be displayed graphically
instead of basic scores so as to better perceive global structures.
Lag vectors are stored in the \texttt{\$ls} component:
<<>>=
head(mySpca$ls)
tail(mySpca$ls)
dim(mySpca$ls)
@

\noindent Lastly, we can compare the axes of an ordinary, 'classical'
PCA (denoted $\m{u}$ in the paper) to the axes of the sPCA ($\m{v}$).
This is achieved by projecting $\m{u}$ onto $\m{v}$, but this
projection is a particular one: because both $\m{u}$ and $\m{v}$ are
centred to mean zero and scaled to unit variance, the value of the
projection simply is the correlation between both axes.
This information is stored inside the \texttt{\$as} component:
<<>>=
mySpca$as
@





%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Representing the information}
%%%%%%%%%%%%%%%%%%%%%%%%%%%

The information contained inside a \texttt{spca} object can be displayed
in several ways.
While we have seen that a simple barplot of sPCA eigenvalues can give a first idea of the
global and local structures to be retained, we have also seen that
each eigenvalue can be decomposed into a \textit{variance} and a
\textit{spatial autocorrelation} (Moran's $I$) component.
This information is provided by the \texttt{summary} function, but it
can also be represented graphically.
The corresponding function is \rcmd{screeplot}, and can be used on any
\texttt{spca} object:
<<screeplot,fig=TRUE>>=
screeplot(mySpca)
@
\noindent The resulting figure represents eigenvalues of sPCA (denoted
$\lambda_i$ with $i=1,\ldots,n-1$, where $\lambda_1$ is the strongest
global eigenvalue, and $\lambda_{n-1}$ is the strongest local eigenvalue) according the their variance and Moran's $I$ components.
These eigenvalues are contained inside a rectangle indicated in dashed
lines.
The maximum attainable variance by a linear combination of alleles is
the one from an ordinary PCA, indicated by the vertical dashed line onto
the right.
The two horizontal dashed lines indicate the range of variation of
Moran's $I$, given the spatial weighting matrix that was used.
This figure is useful to assess whether a given score of entities contains
relatively enough variability and spatial structuring to be interpreted.
For instance, here, $\lambda_1$ clearly is the largest eigenvalue in
terms of variance and of spatial autocorrelation, and can be well
distinguished from all the other eigenvalues.
Hence, only the first global structure, associated to $\lambda_1$, should be interpreted.
\\


The global and local tests proposed in \citet{tjart04} can
be used to reinforce the decision of interpreting or not
interpreting global and local structures.
Each test can detect the presence of one kind of structure.
We can apply them to the object \texttt{obj}, used in our sPCA:
<<globalrtest,fig=TRUE>>=
myGtest <- global.rtest(obj$tab,mySpca$lw,nperm=99)
myGtest
plot(myGtest)
@

\noindent The produced object is a \texttt{randtest} object (see
\texttt{?randtest}), which is the class of object for Monte-Carlo
tests in the \textit{ade4} package.
As shown, such object can be plotted using a \texttt{plot} function:
the resulting figure shows an histogram of permuted test statistics
and indicates the observed statistics by a black dot and a segment.
Here, the plot clearly shows that the oberved test statistic is larger
than most simulated values, leading to a likely rejection of
alternative hypothesis.
Note that because 99 permutations were used, the p-value cannot be
lower than 0.01.
In practice, more permutations should be used (like 9999 for results
intended to be published).

The same can be done with the local test, which here we do not expect
to be significant:
<<localrtest,fig=TRUE>>=
myLtest <- local.rtest(obj$tab,mySpca$lw,nperm=99)
myLtest
plot(myLtest)
@
~\\


Once we have an idea of which structures shall be interpreted, we can
try to visualize spatial genetic patterns.
There are several ways to do so.
The first, most simple approach is through the function plot (see \texttt{?plot.spca}):
<<plotspca,fig=TRUE,size=.8>>=
plot(mySpca)
@
\noindent This figure shows different information, that we detail from
the top to the bottom and from the left to the right.
The first plot shows the connection network that was used to define
spatial weightings.
The second, third, and fourth plots are different representations of
entities scores onto one axis in space, the first global score being the default (argument
\texttt{axis}).
In each, the values of scores (\texttt{\$li[,axis]} component of the
\texttt{spca} object) are represented using black and white symbols
(a variant being grey levels): white for negative values, and black
for positive values.
The second plot is a local interpolation of scores (function
\rcmd{s.image} in \textit{ade4}), using grey levels, with contour lines.
The closer the contour lines are from each other, the stepest the
genetic differentiation is.
The third plot uses different sizes of squares to represent different
absolute values (\rcmd{s.value} in \textit{ade4}): large black squares are well differentiated from
large white squares, but small squares are less differentiated. 
The fourth plot is a variant using grey levels (\rcmd{s.value} in
\textit{ade4}, with 'greylevel' method).
Here, all the three representations of the first global score show
that genotypes are splitted in two genetical clusters, one in the west
(or left) and one in the east (right).
The last two plots of the \texttt{plot.spca} function are the two
already seen displays of eigenvalues.
\\

Another way of representing a score of sPCA is using the
\rcmd{colorplot} function.
This function can show up to three scores at the same time by
translating each score into a channel of color (red, green, and blue).
The obtained values are used to compose a color using the RGB system.
See \texttt{?colorplot} for details about this function.
The original idea of such representation is due to \citet{tj179}.
Despite the \texttt{colorplot} clearly is more powerful to represent
more than one set of scores on a single map, we can use it to represent the
first global structure that was retained in \texttt{mySpca}:
<<colorplot,fig=TRUE>>=
colorplot(mySpca,cex=3,main="colorplot of mySpca, first global score")
@
\noindent See \texttt{example(colorplot)} and \texttt{example(spca)}
for more examples of applications of colorplot to represent sPCA scores.


So far, we assessed the spatial genetic structures existing in the data.
We learned that a global structure existed, and we observed that it
consisted in two east-west genetic clusters.
Now, we may like to know how each allele contributes to a given set of
scores.
To quantify such contribution, the absolute value of loadings for
a given structure can be used.
However, it is more relevant to consider squared loadings, as their
sum is always constrained to be unit (because $\|\m{v}\|^2=1$).
We can look for the alleles contributing most to the first axis
of sPCA, using the function \texttt{loadingplot} (see \texttt{?loadingplot} for
a description of the arguments):
<<fig=TRUE>>=
myLoadings <- mySpca$c1[,1]^2
names(myLoadings) <- rownames(mySpca$c1)
loadingplot(myLoadings, xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first sPCA axis")
@
\noindent See \texttt{?loadingplot} for more information about this
function, in particular for the definition of the threshold value
above which alleles are annotated.
Note that it is possible to separate alleles by markers,
using the \texttt{fac} argument, to assess if all markers have
comparable contributions to a given structure.
In our case, we would only have to specify \texttt{fac=obj@loc.fac};
also note that \texttt{loadingplot} invisibly returns information
about the alleles whose contribution is above the threshold.
For instance, to identify the 5\% of alleles with the greatest
contributions to the first global structure in \texttt{mySpca}, we need:
<<fig=TRUE, width=8, size=.9>>=
temp <- loadingplot(myLoadings, threshold=quantile(myLoadings, 0.95), xlab="Alleles",ylab="Weight of the alleles",main="Contribution of alleles \n to the first sPCA axis", fac=obj@loc.fac, cex.lab=1, cex.fac=.8)
temp
@

But to assess the average contribution of each marker, a traditional
boxplot remains a better tool:
<<boxplot,fig=TRUE, keep.source=TRUE>>=
boxplot(myLoadings~obj$loc.fac, las=3, 
        main="Contributions by markers \nto the first global score")
@

%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Diving into data: analysis of a real dataset}
%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%
To come...


\clearpage
\bibliography{biblioTJ}
\bibliographystyle{jtbnew}

\end{document}
